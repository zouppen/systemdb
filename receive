#!/usr/bin/env php
<?php

// Make warnings errors, source: https://stackoverflow.com/a/2071048/514723
set_error_handler( function ($errno, $errstr, $errfile, $errline) {
    throw new ErrorException($errstr, $errno, 0, $errfile, $errline);
});

if ($argc !== 2) {
    fwrite(STDERR, "Usage:   ${argv[0]} INI_FILE\n");
    exit(1);
}

$ini = parse_ini_file($argv[1], true);

// Site is a namespace you can use, default is empty string.
$site = $ini['site'] ?? '';

// Connect and prepare statements
$db = pg_connect($ini['db']);
pg_prepare($db, 'cursor_create', 'INSERT INTO cursor (site, source) VALUES ($1, $2) ON CONFLICT DO NOTHING');
pg_prepare($db, 'cursor_start', 'SELECT cursor, ts FROM cursor WHERE site=$1 AND source=$2');
pg_prepare($db, 'cursor_set', 'UPDATE cursor SET cursor=$3, ts=($4::BIGINT) WHERE site=$1 AND source=$2');

// Check if the source is allowed in the config file
$source = trim(fgets(STDIN));
if (!array_key_exists($source, $ini)) {
    fwrite(STDERR, "Unknown cursor name given: $source\n");
    exit(2);
}

// Prepare queries for given source
foreach ($ini[$source] as $tag => $sql) {
    pg_prepare($db, "data_$tag", $sql);
}

// Create cursor if not exists
pg_execute($db, 'cursor_create', [$site, $source]);

// Return the pointer to the remote application
$cursor_result = pg_execute($db, 'cursor_start', [$site, $source]);
$cursor_start = pg_fetch_result($cursor_result, 0, 0);
$cursor_ts = pg_fetch_result($cursor_result, 0, 1);
print("$cursor_start\n$cursor_ts\n");

// Start receiving lines
pg_query($db, 'BEGIN;');

while (true) {
    // Get CSV data or quit if EOF reached
    $line = fgetcsv(STDIN);
    if ($line === FALSE) break;

    $tag = array_shift($line);

    if ($tag === '__CURSOR' || $tag === '_') {
        // If the data tag is __CURSOR or _, then we have fully received the
        // rows related to a single cursor and it's time to commit.
        $cursor = array_shift($line);
        $ts = array_shift($line);

        pg_execute($db, 'cursor_set', [$site, $source, $cursor, $ts]);
        pg_query($db, 'COMMIT;BEGIN;');
    } else {
        // Insert CSV to a table but do not commit yet
        pg_execute($db, "data_$tag", $line);
    }
}

fprintf(STDERR, "End of stream\n");
